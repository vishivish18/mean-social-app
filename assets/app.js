angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(o){o.$on("login",function(t,n){o.currentUser=n})}]),angular.module("app").controller("HomeCtrl",["$scope",function(o){o.hello="hello"}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(o,t,n){o.login=function(e,r){t.login(e,r).then(function(t){console.log("printing response"),console.log(t.data),o.$emit("login",t.data),n.path("/")})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(o,t){t.fetch().success(function(t){o.posts=t}),o.addPost=function(){o.postBody&&t.create({body:o.postBody}).success(function(t){o.postBody=null})},o.$on("ws:new_post",function(t,n){o.$apply(function(){o.posts.unshift(n)})})}]),angular.module("app").service("PostsSvc",["$http",function(o){this.fetch=function(){return o.get("/api/posts")},this.create=function(t){return o.post("/api/posts",t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(o,t){o.register=function(o,n){t.register(o,n).then(function(o){alert("Thank you for signing up "+o.data.username)})["catch"](function(o){console.log(o)})}}]),angular.module("app").config(["$routeProvider",function(o){o.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/home",{controller:"HomeCtrl",templateUrl:"home.html"})}]),angular.module("app").service("UserSvc",["$http",function(o){var t=this;t.getUser=function(){return o.get("api/users")},t.login=function(n,e){return o.post("api/sessions",{username:n,password:e}).then(function(n){return t.token=n.data,o.defaults.headers.common["x-auth"]=n.data,t.getUser()})},t.register=function(t,n){return o.post("api/users",{username:t,password:n}).then(function(o){return o})}}]),angular.module("app").run(["$rootScope","$timeout",function(o,t){!function n(){var e="ws://localhost:3000",r=new WebSocket(e);r.onclose=function(o){console.log("WebSocket Disconnected......"),t(n,1e4)},r.onmessage=function(t){console.log(t);var n=JSON.parse(t.data);o.$broadcast("ws:"+n.topic,n.data)}}()}]);
//# sourceMappingURL=data:application/json;base64,